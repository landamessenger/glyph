name: Handle Pull Request Link to Issue

on:
  pull_request:
    types: [opened, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  link_pr_to_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Issue Number from Branch Name
        id: extract_issue
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const match = branchName.match(/[a-zA-Z]+\/([0-9]+)-.*/);

            if (match) {
              core.exportVariable("issue_number", match[1]);
            } else {
              throw new Error(`No issue number found in branch name: ${branchName}`);
            }

      - name: Check if PR is linked to an issue via HTML
        id: check_pr_link
        uses: actions/github-script@v6
        with:
          script: |
            const prUrl = context.payload.pull_request.html_url;

            console.log(`Fetching PR URL: ${prUrl}`);
            const htmlContent = await fetch(prUrl).then(res => res.text());

            const isLinked = !htmlContent.includes("has_github_issues=false");
            core.exportVariable("is_linked", isLinked);

            console.log(`Is PR linked to an issue? ${isLinked}`);
          result-encoding: string

      - name: Add PR to Project
        if: env.is_linked != 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_PAT }}
          script: |
            const projectUrl = 'https://github.com/orgs/landamessenger/projects/3';
            const projectMatch = projectUrl.match(/\/(?<ownerType>orgs|users)\/(?<ownerName>[^/]+)\/projects\/(?<projectNumber>\d+)/);

            if (!projectMatch || !projectMatch.groups) {
              throw new Error(`Invalid project URL: ${projectUrl}`);
            }

            const { ownerType, ownerName, projectNumber } = projectMatch.groups;

            const ownerQueryField = ownerType === 'orgs' ? 'organization' : 'user';

            const queryProject = `
              query($ownerName: String!, $projectNumber: Int!) {
                ${ownerQueryField}(login: $ownerName) {
                  projectV2(number: $projectNumber) {
                    id
                  }
                }
              }
            `;

            const { data } = await github.graphql(queryProject, {
              ownerName,
              projectNumber: parseInt(projectNumber, 10),
            });

            const projectId = data[ownerQueryField].projectV2.id;
            const contentId = context.payload.pull_request.node_id;

            const mutation = `
              mutation($input: AddProjectV2ItemByIdInput!) {
                addProjectV2ItemById(input: $input) {
                  item {
                    id
                  }
                }
              }
            `;

            const response = await github.graphql(mutation, {
              input: {
                projectId,
                contentId,
              },
            });

            console.log('PR added to project with item ID:', response.addProjectV2ItemById.item.id);

      - name: Change base branch to default
        if: env.is_linked != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const defaultBranch = context.payload.repository.default_branch;
            const prNumber = context.payload.pull_request.number;

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              base: defaultBranch,
            });

            console.log(`Changed base branch to ${defaultBranch}`);

      - name: Add "Resolves #[issue_number]" to PR description
        if: env.is_linked != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = process.env.issue_number;
            const prNumber = context.payload.pull_request.number;
            const prBody = context.payload.pull_request.body || "";

            const updatedBody = `${prBody}\n\nResolves #${issueNumber}`;
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody,
            });

            console.log(`Added "Resolves #${issueNumber}" to PR description`);

      - name: Wait 20 seconds
        uses: actions/github-script@v6
        if: env.is_linked != 'true'
        with:
          script: |
            console.log("Waiting 20 seconds...");
            await new Promise(resolve => setTimeout(resolve, 20000));

      - name: Restore original base branch
        uses: actions/github-script@v6
        if: env.is_linked != 'true'
        with:
          script: |
            const originalBaseBranch = context.payload.pull_request.base.ref;
            const prNumber = context.payload.pull_request.number;

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              base: originalBaseBranch,
            });

            console.log(`Restored original base branch to ${originalBaseBranch}`);

      - name: Remove "Resolves \#[issue_number]" from PR description
        uses: actions/github-script@v6
        if: env.is_linked != 'true'
        with:
          script: |
            const issueNumber = process.env.issue_number;
            const prNumber = context.payload.pull_request.number;
            const prBody = context.payload.pull_request.body || "";

            const updatedBody = prBody.replace(`\n\nResolves #${issueNumber}`, "");
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody,
            });

            console.log(`Removed "Resolves #${issueNumber}" from PR description`);

      - name: Add a comment to the PR
        if: env.is_linked != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const defaultBranch = context.payload.repository.default_branch;
            const originalBaseBranch = context.payload.pull_request.base.ref;
            const issueNumber = process.env.issue_number;
            const prNumber = context.payload.pull_request.number;
            const commentBody = `
            ## üõ†Ô∏è Pull Request Linking Summary
            
            The following actions were performed to ensure the pull request is properly linked to the related issue:
              
            1. The base branch was temporarily updated to \`${defaultBranch}\`.
            2. The description was temporarily modified to include a reference to issue **#${issueNumber}**.
            3. The base branch was reverted to its original value: \`${originalBaseBranch}\`.
            4. The temporary issue reference **#${issueNumber}** was removed from the description.
            
            Thank you for contributing! üôå
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody,
            });
            
            console.log(`Comment added to PR #${prNumber}`);